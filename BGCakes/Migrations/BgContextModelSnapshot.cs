// <auto-generated />
using BGCakes.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BGCakes.Migrations
{
    [DbContext(typeof(BgContext))]
    partial class BgContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BGCakes.Models.Cake", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Cakes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTHC-0lnHat0m6-MP2d-7xxN5J_5fiNqFM1vjFxta_KMg&s",
                            Name = "Chocolate",
                            Price = 67000.0
                        });
                });

            modelBuilder.Entity("BGCakes.Models.CakeIngredient", b =>
                {
                    b.Property<int>("CakeId")
                        .HasColumnType("int");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.HasKey("CakeId", "IngredientId");

                    b.HasIndex("IngredientId");

                    b.ToTable("CakeIngredients");

                    b.HasData(
                        new
                        {
                            CakeId = 1,
                            IngredientId = 1
                        },
                        new
                        {
                            CakeId = 1,
                            IngredientId = 2
                        },
                        new
                        {
                            CakeId = 1,
                            IngredientId = 3
                        });
                });

            modelBuilder.Entity("BGCakes.Models.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Flour"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Pure Chocolate"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Flavors"
                        });
                });

            modelBuilder.Entity("BGCakes.Models.CakeIngredient", b =>
                {
                    b.HasOne("BGCakes.Models.Cake", "Cake")
                        .WithMany("CakeIngredients")
                        .HasForeignKey("CakeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BGCakes.Models.Ingredient", "Ingredient")
                        .WithMany("CakeIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cake");

                    b.Navigation("Ingredient");
                });

            modelBuilder.Entity("BGCakes.Models.Cake", b =>
                {
                    b.Navigation("CakeIngredients");
                });

            modelBuilder.Entity("BGCakes.Models.Ingredient", b =>
                {
                    b.Navigation("CakeIngredients");
                });
#pragma warning restore 612, 618
        }
    }
}
